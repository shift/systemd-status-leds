# This workflow builds and publishes Rust binaries for releases
# It replaces the Go SLSA workflow with Rust-specific release automation

name: Release

on:
  workflow_dispatch:
  release:
    types: [created]

permissions: read-all

jobs:
  build-and-upload:
    name: Build and upload binaries
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libsystemd-dev libdbus-1-dev

      - name: Install cross-compilation tools
        if: matrix.target != 'x86_64-unknown-linux-gnu'
        run: |
          sudo apt-get install -y gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf
          
      - name: Configure cross-compilation
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig" >> $GITHUB_ENV

      - name: Configure cross-compilation
        if: matrix.target == 'armv7-unknown-linux-gnueabihf'  
        run: |
          echo "CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_LINKER=arm-linux-gnueabihf-gcc" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/usr/lib/arm-linux-gnueabihf/pkgconfig" >> $GITHUB_ENV

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Rename binary
        run: |
          mkdir -p artifacts
          cp target/${{ matrix.target }}/release/systemd-status-leds artifacts/systemd-status-leds-${{ matrix.target }}

      - name: Upload release asset
        uses: actions/upload-artifact@v4
        with:
          name: systemd-status-leds-${{ matrix.target }}
          path: artifacts/systemd-status-leds-${{ matrix.target }}

      - name: Upload to release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: artifacts/systemd-status-leds-${{ matrix.target }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

